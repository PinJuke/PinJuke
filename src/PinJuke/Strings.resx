<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BrowserUp" xml:space="preserve">
    <value>(Up)</value>
  </data>
  <data name="ErrorReadingFile" xml:space="preserve">
    <value>Error reading file "{0}".</value>
  </data>
  <data name="CoverTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="CoverArtist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="CoverYear" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="CoverAlbum" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="NoAudioDeviceFound" xml:space="preserve">
    <value>No audio device found.</value>
  </data>
  <data name="StateVolumeXPercent" xml:space="preserve">
    <value>Volume {0:00}%</value>
  </data>
  <data name="StateStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StatePlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="StatePause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="StatePrevious" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="StateNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="StateTilt" xml:space="preserve">
    <value>Tilt!</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose file…</value>
  </data>
  <data name="RelativePath" xml:space="preserve">
    <value>Relative path</value>
  </data>
  <data name="ChooseDirectory" xml:space="preserve">
    <value>Choose directory…</value>
  </data>
  <data name="WantToStartConfigurator" xml:space="preserve">
    <value>Do you want to start the configurator?</value>
  </data>
  <data name="PathNotFound" xml:space="preserve">
    <value>"{0}" not found.</value>
  </data>
  <data name="LabelDocumentation" xml:space="preserve">
    <value>Further information can be found in the documentation:</value>
  </data>
  <data name="ErrorWritingFile" xml:space="preserve">
    <value>Error writing file "{0}".</value>
  </data>
  <data name="IniFile" xml:space="preserve">
    <value>INI file</value>
  </data>
  <data name="SaveAll" xml:space="preserve">
    <value>Save all</value>
  </data>
  <data name="AddNewPlaylist" xml:space="preserve">
    <value>Add new playlist…</value>
  </data>
  <data name="RunCurrentPlaylist" xml:space="preserve">
    <value>Start with current playlist</value>
  </data>
  <data name="JpegFile" xml:space="preserve">
    <value>JPEG file</value>
  </data>
  <data name="Mp4File" xml:space="preserve">
    <value>MP4 file</value>
  </data>
  <data name="XmlFile" xml:space="preserve">
    <value>XML file</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="EnableDof" xml:space="preserve">
    <value>Enable DOF</value>
  </data>
  <data name="ConsentToDataCollection" xml:space="preserve">
    <value>Consent to the data collection</value>
  </data>
  <data name="RefuseDataCollection" xml:space="preserve">
    <value>Refuse the collection of data</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AcceptLicense" xml:space="preserve">
    <value>Accept license</value>
  </data>
  <data name="CreatePlaylistAfterCompletion" xml:space="preserve">
    <value>Create a playlist after completion</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>Check for application updates (when the Configurator is run)</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="FindTheProjectPageAt" xml:space="preserve">
    <value>You can find the project page at:</value>
  </data>
  <data name="WelcomeToPinJuke" xml:space="preserve">
    <value>Welcome to PinJuke!</value>
  </data>
  <data name="WillSetUpPinJuke" xml:space="preserve">
    <value>We will set up PinJuke on the following pages.</value>
  </data>
  <data name="ProvidedUnderDisplayedLicense" xml:space="preserve">
    <value>PinJuke is provided under the displayed license.</value>
  </data>
  <data name="ConfigurationOfDisplays" xml:space="preserve">
    <value>Configuration of the displays</value>
  </data>
  <data name="GetDisplayPositionsFromPinup" xml:space="preserve">
    <value>Get display positions from PinUP</value>
  </data>
  <data name="DisplayPlayField" xml:space="preserve">
    <value>Play field</value>
  </data>
  <data name="DisplayBackGlass" xml:space="preserve">
    <value>Back glass</value>
  </data>
  <data name="DisplayDmd" xml:space="preserve">
    <value>DMD</value>
  </data>
  <data name="NoSeparateDmdMonitorHint" xml:space="preserve">
    <value>If you do not have a separate monitor for the DMD output, you can have the DMD window overlay the back glass window, for example.</value>
  </data>
  <data name="ConfigurationOfDof" xml:space="preserve">
    <value>Configuration of DOF</value>
  </data>
  <data name="DofDescription" xml:space="preserve">
    <value>The Direct Output Framework can be used to control the controllers connected to your hardware.</value>
  </data>
  <data name="SelectDofConfigFile" xml:space="preserve">
    <value>Select the GlobalConfig_B2SServer.xml file:</value>
  </data>
  <data name="DataOnSoftwareUsage" xml:space="preserve">
    <value>Data on software usage</value>
  </data>
  <data name="DataOnSoftwareUsageDescription" xml:space="preserve">
    <value>Please allow data on the use of the software and hardware to be collected pseudonymously. We would like to know how the software is received and used by users. The data can be made available to the community (e.g. in the form of evaluations).</value>
  </data>
  <data name="SeeWhatDataIsCollected" xml:space="preserve">
    <value>See what data is collected.</value>
  </data>
  <data name="DataOnSoftwareUsageStorage" xml:space="preserve">
    <value>The data is stored in a Firebase database (a Google product). Deletion of the data cannot be requested.</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>Button</value>
  </data>
  <data name="RegularFunction" xml:space="preserve">
    <value>Regular function</value>
  </data>
  <data name="BrowserFunction" xml:space="preserve">
    <value>Browser is visible</value>
  </data>
  <data name="ButtonFlipperLeftRight" xml:space="preserve">
    <value>Flipper button
left/right</value>
  </data>
  <data name="ButtonMagnaSaveLeftRight" xml:space="preserve">
    <value>Magna save button
left/right</value>
  </data>
  <data name="ButtonStart" xml:space="preserve">
    <value>Start button</value>
  </data>
  <data name="ButtonExit" xml:space="preserve">
    <value>Exit button</value>
  </data>
  <data name="ButtonLaunchBall" xml:space="preserve">
    <value>Launch ball button</value>
  </data>
  <data name="ButtonFlipperLeftRightRegularFunction" xml:space="preserve">
    <value>Track back/forward</value>
  </data>
  <data name="ButtonFlipperLeftRightBrowserFunction" xml:space="preserve">
    <value>Navigate back/forward</value>
  </data>
  <data name="ButtonMagnaSaveLeftRightRegularFunction" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="ButtonMagnaSaveLeftRightBrowserFunction" xml:space="preserve">
    <value>Visualization back/forward</value>
  </data>
  <data name="ButtonStartRegularFunction" xml:space="preserve">
    <value>Play/pause</value>
  </data>
  <data name="ButtonStartBrowserFunction" xml:space="preserve">
    <value>Play/pause</value>
  </data>
  <data name="ButtonExitRegularFunction" xml:space="preserve">
    <value>Exit app</value>
  </data>
  <data name="ButtonExitBrowserFunction" xml:space="preserve">
    <value>Exit app</value>
  </data>
  <data name="ButtonLaunchBallRegularFunction" xml:space="preserve">
    <value>Open track browser</value>
  </data>
  <data name="ButtonLaunchBallBrowserFunction" xml:space="preserve">
    <value>Folder: follow
Track: restart</value>
  </data>
  <data name="RectLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="RectTop" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="RectWidth" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="RectHeight" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="BeaconQueryingData" xml:space="preserve">
    <value>Querying data…</value>
  </data>
  <data name="BeaconAppName" xml:space="preserve">
    <value>App name</value>
  </data>
  <data name="BeaconAppVersion" xml:space="preserve">
    <value>App version</value>
  </data>
  <data name="BeaconAppFileVersion" xml:space="preserve">
    <value>App file version</value>
  </data>
  <data name="BeaconLocale" xml:space="preserve">
    <value>Locale</value>
  </data>
  <data name="BeaconTimezone" xml:space="preserve">
    <value>Timezone</value>
  </data>
  <data name="BeaconDmdAvailable" xml:space="preserve">
    <value>DMD available</value>
  </data>
  <data name="BeaconDofEnabled" xml:space="preserve">
    <value>DOF enabled</value>
  </data>
  <data name="BeaconControllerNames" xml:space="preserve">
    <value>Controller names</value>
  </data>
  <data name="BeaconErrorQuerying" xml:space="preserve">
    <value>Error querying the data ({0})</value>
  </data>
  <data name="BeaconWhatIsIncluded" xml:space="preserve">
    <value>The software determines the following data about your system:</value>
  </data>
  <data name="YouAreAllSet" xml:space="preserve">
    <value>You are all set!</value>
  </data>
  <data name="OverviewOfTheButtons" xml:space="preserve">
    <value>Overview of the hardware controls</value>
  </data>
  <data name="NewPlaylistConfiguration" xml:space="preserve">
    <value>New playlist configuration</value>
  </data>
  <data name="RerunSetup" xml:space="preserve">
    <value>Re-run setup</value>
  </data>
  <data name="GlobalConfiguration" xml:space="preserve">
    <value>Global configuration</value>
  </data>
  <data name="MediaPath" xml:space="preserve">
    <value>Media path</value>
  </data>
  <data name="Keyboard" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="KeyExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="KeyBrowse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="KeyPrevious" xml:space="preserve">
    <value>Back/previous</value>
  </data>
  <data name="KeyNext" xml:space="preserve">
    <value>Next/forward</value>
  </data>
  <data name="KeyPlayPause" xml:space="preserve">
    <value>Play/pause</value>
  </data>
  <data name="KeyVolumeDown" xml:space="preserve">
    <value>Volume down</value>
  </data>
  <data name="KeyVolumeUp" xml:space="preserve">
    <value>Volume up</value>
  </data>
  <data name="MilkdropPresetsPath" xml:space="preserve">
    <value>Presets path</value>
  </data>
  <data name="MilkdropTexturesPath" xml:space="preserve">
    <value>Textures path</value>
  </data>
  <data name="Milkdrop" xml:space="preserve">
    <value>Milkdrop</value>
  </data>
  <data name="Dof" xml:space="preserve">
    <value>DOF</value>
  </data>
  <data name="DofGlobalConfigFilePath" xml:space="preserve">
    <value>GlobalConfig_B2SServer.xml</value>
  </data>
  <data name="GetDisplayPositionFromPinup" xml:space="preserve">
    <value>Get display position from PinUP</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="Rotation" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="PlaylistConfiguration" xml:space="preserve">
    <value>Playlist configuration</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Player</value>
  </data>
  <data name="MusicPath" xml:space="preserve">
    <value>Path to music directory</value>
  </data>
  <data name="StartupTrackType" xml:space="preserve">
    <value>Behavior on program start</value>
  </data>
  <data name="StartupTrackTypeLastPlayedTrack" xml:space="preserve">
    <value>Continue with the last track played</value>
  </data>
  <data name="StartupTrackTypeFirstTrack" xml:space="preserve">
    <value>First track from directory</value>
  </data>
  <data name="StartupTrackTypeRandomMode" xml:space="preserve">
    <value>Random playback sequence</value>
  </data>
  <data name="PlayOnStartup" xml:space="preserve">
    <value>Playback at program start</value>
  </data>
  <data name="BackgroundType" xml:space="preserve">
    <value>Background type</value>
  </data>
  <data name="BackgroundTypeShowSpecifiedImage" xml:space="preserve">
    <value>Show specified image</value>
  </data>
  <data name="BackgroundTypeShowMilkdropVisualizations" xml:space="preserve">
    <value>Show milkdrop visualizations</value>
  </data>
  <data name="BackgroundImageFile" xml:space="preserve">
    <value>Background image file</value>
  </data>
  <data name="EnableTrackCover" xml:space="preserve">
    <value>Enable track cover</value>
  </data>
  <data name="EnablePlaybackStatus" xml:space="preserve">
    <value>Enable playback status</value>
  </data>
  <data name="EnableTrackBrowser" xml:space="preserve">
    <value>Enable track browser</value>
  </data>
  <data name="EnableThemeVideo" xml:space="preserve">
    <value>Enable themed video skins</value>
  </data>
  <data name="ThemeVideoStartFile" xml:space="preserve">
    <value>Theme video start file</value>
  </data>
  <data name="ThemeVideoLoopFile" xml:space="preserve">
    <value>Theme video loop file</value>
  </data>
  <data name="ThemeVideoStopFile" xml:space="preserve">
    <value>Theme video stop file</value>
  </data>
  <data name="ThemeVideoRotation" xml:space="preserve">
    <value>Theme video rotation</value>
  </data>
  <data name="WillTryToRecognizeControllers" xml:space="preserve">
    <value>(Will try to recognize your controllers with the help of DOF.)</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
  </data>
</root>